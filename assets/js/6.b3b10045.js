(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{192:function(e,t,r){"use strict";r.r(t);var s=r(0),i=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),r("p",[e._v("有两种方法启动调试：")]),e._v(" "),e._m(7),e._v(" "),r("p",[e._v("在以下的说明中都需要添加环境变量 $LOROOT 为您的源代码路径，也就是 autogen.sh 脚本所在的路径。")]),e._v(" "),e._m(8),e._v(" "),r("p",[e._v("这种方法很简单， soffice 脚本会设置需要的变量。")]),e._v(" "),e._m(9),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),r("p",[e._v("从 3.5 版本开始，您可以通过以下简单的名利直接启动调试器：")]),e._v(" "),e._m(13),e._m(14),e._v(" "),e._m(15),e._v(" "),r("p",[e._v("当程序停止时，您可以查找符号、查看变量、设置断点等:")]),e._v(" "),e._m(16),r("p",[e._v("如上命令，已经在函数出设置了断点。设置函数断点时，必须使用函数全名，包括类名和命名空间。")]),e._v(" "),r("p",[e._v("设置断点的通用语法是："),r("code",[e._v("break &lt;location&gt;")]),e._v("，<location> 可以是函数全名、内存地址或者是文件名 + ‘:’ + 行号构成的定位。更多信息请查看 gdb 的手册： "),r("a",{attrs:{href:"http://sourceware.org/gdb/current/onlinedocs/gdb/Specify-Location.html#Specify-Location",target:"_blank",rel:"noopener noreferrer"}},[e._v("specifying a Location"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("用如下命令查看断点列表：")]),e._v(" "),e._m(17),r("p",[e._v("用如下命令删除断点：")]),e._v(" "),e._m(18),e._m(19),e._v(" "),r("p",[e._v("当您设置的断点符号未加载时，您可以设置 pending breakpoint，当符号可用时 gdb 会自动进入断点。")]),e._v(" "),e._m(20),r("p",[e._v("通过如下命令设置 pending breakpoint:")]),e._v(" "),e._m(21),r("p",[e._v('恢复默认使用 "auto" 选项。')]),e._v(" "),e._m(22),e._v(" "),e._m(23),e._v(" "),r("p",[e._v("在 gdb 7 及以后的版本中，通过 "),r("a",{attrs:{href:"http://lists.freedesktop.org/archives/libreoffice/2011-August/017088.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("gdb pretty pringters"),r("OutboundLink")],1),e._v(" 您可以打印 UTF-16 的 rtl::OUString 和 8-bit 的 rtl::OString 的内容。同时也可以其他对象的格式化内容，如： Sequence, Date, Time 等等。如果你不需要显示格式化内容请使用 "),r("em",[e._v("print/r(或者 p/r)")]),e._v("。 pretty printers 在 gdb 启动时自动激活。")]),e._v(" "),e._m(24),e._v(" "),e._m(25),r("p",[e._v("备注 2：Apple gdb 不支持 Pyton pretty-printers。")]),e._v(" "),e._m(26),e._v(" "),r("p",[e._v("pretty-print 同样可以格式化打印出 STL 容器的内容。")]),e._v(" "),e._m(27),e._v(" "),r("p",[e._v("如果您使用早期版本的 LO pretty printer 没有正常工作是因为 LO 使用自己的 libstdc++，所以 gdb 不鞥自动加载相关的 Python 脚本。")]),e._v(" "),e._m(28),e._v(" "),e._m(29),e._m(30),e._v(" "),r("p",[e._v("当一个共享库加载时引发共享对象事件。默认情况下共享对象事件是关闭的，你可以使用如下命令开启共享对象事件：")]),e._v(" "),e._m(31),r("p",[e._v("开启共享事件对象后，每次加载共享库是 gdb 会暂停，您可以查找符号设置断点等。")]),e._v(" "),r("p",[e._v("您可能只需要找到你需要的共享库加载，这个过程中您需要多次执行 continue 命令。")]),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),r("p",[e._v("如果您想查看 UNO reference 指向的真是 C++ 对象，您可以使用如下命令：")]),e._v(" "),e._m(34),e._m(35),e._v(" "),r("p",[e._v("一些 gdb 的其他帮助信息：")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"http://lists.freedesktop.org/archives/libreoffice/2011-October/019396.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("info mutex"),r("OutboundLink")],1),e._v(": 显示有获取 mutex 的线程。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"http://lists.freedesktop.org/archives/libreoffice/2011-October/019385.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("fcatch"),r("OutboundLink")],1),e._v(": stop when an exception is thrown, but only if a certain given function is on the stack.")])])]),e._v(" "),r("p",[e._v("待翻译...")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"libreoffice-贡献代码-debugging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#libreoffice-贡献代码-debugging","aria-hidden":"true"}},[this._v("#")]),this._v(" LibreOffice 贡献代码 -- Debugging")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"调试选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试选项","aria-hidden":"true"}},[this._v("#")]),this._v(" 调试选项")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先，要开启调试选项："),t("code",[this._v("..autogen.sh --enable-debug")]),this._v(" 开启所有模块的调试或者是 "),t("code",[this._v('-enable-debug --enable-selective-debuginfo="sw/ xmloff/"')]),this._v(" 开启部分模块调试功能。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("另外一个重要的调试选项就是 "),t("code",[this._v("--enable-dbgutil")]),this._v("。此选项会增加一些 STL 的一些断言和调试代码，选项支持 GCC 平台（不包括 Mac OS X 因为 Apple 的 libstdc++ 不支持）和 MSVC 平台。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("使用 "),t("code",[this._v("--enable-debug")]),this._v(" 或者 "),t("code",[this._v("--enable-dbgutil")]),this._v(" 选项编译所有模块大约会使用 30G 的硬盘空间，如果您想减少空间占用可以使用 "),t("code",[this._v("--enable-selective-debuginfo")]),this._v(" 选项，或者先不使用 debug 选项编译然后在重新编译您需要调试的模块：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("make &lt;module&gt;.clean && make &lt;module&gt; debug=t")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"使用-gdb-调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-gdb-调试","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 gdb 调试")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("使用专用启动脚本（soffice, swriter 等）启动应用程序，然后附加应用程序进程到调试器。")]),this._v(" "),t("li",[this._v("通过应用程序直接启动 Libreoffice 进程（soffice.bin）")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"附加-soffice-bin-进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附加-soffice-bin-进程","aria-hidden":"true"}},[this._v("#")]),this._v(" 附加 soffice.bin 进程")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ instdir/program/soffice  # or /sdraw /swriter ...\n$ gdb --pid=$(pidof soffice.bin)\n(gdb)\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("运行启动脚本时（soffice, swriter...），你可以加上 "),t("code",[this._v("-norestore")]),this._v(" 选项，这样当系统发生错误时不会触发 restart/restore 恢复机制。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("使用 "),t("code",[this._v("attach &lt;pid&gt;")]),this._v(" 和 "),t("code",[this._v("detach")]),this._v(" 命令附加和分离 soffice.bin 进程到 gdb。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"从调试器-gdb-中启动-libreoffice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从调试器-gdb-中启动-libreoffice","aria-hidden":"true"}},[this._v("#")]),this._v(" 从调试器(gdb)中启动 LibreOffice")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("make debugrun\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("从 5.0 开始这个选项也适用于 MSVC，但是只能附加到 "),t("code",[this._v("soffice.bin")]),this._v("进程，。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"gdb-使用简要说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gdb-使用简要说明","aria-hidden":"true"}},[this._v("#")]),this._v(" gdb 使用简要说明")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('(gdb) info fun DrawEllipse\nAll functions matching regular expression "DrawEllipse":\n\nFile $LOROOT/svtools/source/filter.vcl/wmf/winmtf.cxx:\nvoid WinMtfOutput::DrawEllipse(Rectangle const&);\n\nFile $LOROOT/clone/libs-gui/vcl/source/gdi/outdev5.cxx:<span style="color:#000000" />\nvoid OutputDevice::DrawEllipse(Rectangle const&);\n\nFile $LOROOT/clone/libs-gui/vcl/source/gdi/pdfwriter.cxx:\nvoid vcl::PDFWriter::DrawEllipse(Rectangle const&);\n\nNon-debugging symbols:\n0x00007f826dd4a318  OutputDevice::DrawEllipse(Rectangle const&)\n0x00007f826dd4a318  [mailto:_ZN12OutputDevice11DrawEllipseERK9Rectangle@plt _ZN12OutputDevice11DrawEllipseERK9Rectangle@plt]\n\n(gdb) break  vcl::PDFWriter::DrawEllipse\nBreakpoint 1 at 0x7f826c7c5e20: file /opt/shared/work/source_code/libreoffice/libo/clone/libs-gui/vcl/source/gdi/pdfwriter.cxx, line 159.\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("(gdb) info break\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x00007f826c7c5e20 in vcl::PDFWriter::DrawEllipse(Rectangle const&)\n                                               at /opt/shared/work/source_code/libreoffice/libo/clone/libsgui/vcl/source/gdi/pdfwriter.cxx:159\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("clear <location>\ndelete <breakpoint number>\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"pending-breakpoints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pending-breakpoints","aria-hidden":"true"}},[this._v("#")]),this._v(" Pending breakpoints")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("(gdb) break SVGActionWriter::ImplWriteRect\nCan't find member of namespace, class, struct, or union named \"SVGActionWriter::ImplWriteRect\"\nHint: try 'SVGActionWriter::ImplWriteRect<TAB> or 'SVGActionWriter::ImplWriteRect<ESC-?>\n(Note leading single quote.)\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (SVGActionWriter::ImplWriteRect) pending.\n(gdb) info break\nNum     Type           Disp Enb Address    What\n1       breakpoint     keep y   <PENDING>  SVGActionWriter::ImplWriteRect\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("set breakpoint pending on\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("关于 pending breakpoint 的讨论：您必须记住函数全名 "),t("code",[this._v("info fun")]),this._v(" 命令是无效的，因为符号没有加载。一个可行的解决方案是使用 shared objet events（译者注：详情查看下文）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"dumping-strings-etc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dumping-strings-etc","aria-hidden":"true"}},[this._v("#")]),this._v(" Dumping Strings(etc)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("备注 1：如果您的 pretty printers 没有正常工作，可能是因为权限设置导致的，请认真查看日志信息，如果是请尝试在 "),t("code",[this._v("$HOME/.gdinit")]),this._v(" 中加入：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("add-auto-load-safe-path /path/to/your/lo/git\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"dumping-stl-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dumping-stl-容器","aria-hidden":"true"}},[this._v("#")]),this._v(" Dumping STL 容器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"早期版本-lo-处理；从-4-0-版本开始-libstdc-不在捆绑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#早期版本-lo-处理；从-4-0-版本开始-libstdc-不在捆绑","aria-hidden":"true"}},[this._v("#")]),this._v(" 早期版本 LO 处理；从 4.0 版本开始 libstdc++ 不在捆绑")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 Fedora 16 系统中，您可以在 "),t("code",[this._v(".gdbinit")]),this._v(" 文件中加入（您可能需要根据您的系统修改相应的版本号）：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("# workaround OOo/LO shipping its own libstdc++\npython\nimport sys\nsys.path.insert(0, '/usr/share/gcc-4.6.1/python')\nend\nsource /usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.16-gdb.py\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"shared-objectevents-共享对象事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shared-objectevents-共享对象事件","aria-hidden":"true"}},[this._v("#")]),this._v(" Shared ObjectEvents(共享对象事件)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("set stop-on-solib-events 1\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("那么，是如何找您想要的共享库呢，您可以使用 "),t("code",[this._v("info shared &lt;reg expr&gt;")]),this._v(" 命令，此命令会使用正则表达式匹配出所有符合条件的共享库。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"调试-uno"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试-uno","aria-hidden":"true"}},[this._v("#")]),this._v(" 调试 UNO")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("(gdb) print *rShape._pInterface\n$1 = {_vptr.XInterface = 0x2aaac99f9728 <vtable for SvxShapeText+648>}\n(gdb) print rShape._pInterface\n$2 = (com::sun::star::uno::XInterface *) 0x2313e9\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"其他帮助"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他帮助","aria-hidden":"true"}},[this._v("#")]),this._v(" 其他帮助")])}],!1,null,null,null);t.default=i.exports}}]);